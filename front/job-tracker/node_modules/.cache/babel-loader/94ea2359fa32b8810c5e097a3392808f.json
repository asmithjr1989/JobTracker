{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/tony/Desktop/JobTracker/front/job-tracker/src/components/job/LoginComponent.jsx\";\nimport React, { Component } from \"react\";\nimport AuthenticationService from \"./AuthenticationService.js\";\n\nclass LoginComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"jobTracker\",\n      password: \"\",\n      hasLoginFailed: false,\n      showSuccessfulMessage: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.loginClicked = this.loginClicked.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  loginClicked() {\n    // if (\n    //   this.state.username === 'asmithjr' &&\n    //   this.state.password === 'dummy'\n    // ) {\n    //   AuthenticationService.registerSuccessfulLogin(this.state.username, this.state.password);\n    //   this.props.history.push(`/welcome/${this.state.username}`);\n    // } else {\n    //   this.setState({ showSuccessfulMessage: false });\n    //   this.setState({ hasLoginFailed: true });\n    // }\n    //   AuthenticationService.executeBasicAuthenticationService(this.state.username, this.state.password).then(\n    //     () => {\n    //       AuthenticationService.registerSuccessfulLogin(this.state.username, this.state.password);\n    //       this.props.history.push(`/welcome/${this.state.username}`);\n    //     }\n    //   ).catch( \n    //     () =>{\n    //       this.setState({ showSuccessfulMessage: false });\n    //       this.setState({ hasLoginFailed: true });\n    //     }\n    //   )\n    // }\n    AuthenticationService.executeJwtAuthenticationService(this.state.username, this.state.password).then(response => {\n      AuthenticationService.registerSuccessfulLoginForJwt(this.state.username, response.data.token);\n      this.props.history.push(`/welcome/${this.state.username}`);\n    }).catch(() => {\n      this.setState({\n        showSuccessfulMessage: false\n      });\n      this.setState({\n        hasLoginFailed: true\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), this.state.showSuccessfulMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Login Successful\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 48\n      }, this), this.state.hasLoginFailed && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-warning\",\n        children: \"Invalid Credentials\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this), \"UserName:\", \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        value: this.state.username,\n        onChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), \"Password:\", \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        value: this.state.password,\n        onChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success\",\n        onClick: this.loginClicked,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default LoginComponent;","map":{"version":3,"sources":["/Users/tony/Desktop/JobTracker/front/job-tracker/src/components/job/LoginComponent.jsx"],"names":["React","Component","AuthenticationService","LoginComponent","constructor","props","state","username","password","hasLoginFailed","showSuccessfulMessage","handleChange","bind","loginClicked","event","setState","target","name","value","executeJwtAuthenticationService","then","response","registerSuccessfulLoginForJwt","data","token","history","push","catch","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,qBAAP,MAAkC,4BAAlC;;AAGA,MAAMC,cAAN,SAA6BF,SAA7B,CAAuC;AACnCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,YADC;AAEXC,MAAAA,QAAQ,EAAE,EAFC;AAGXC,MAAAA,cAAc,EAAE,KAHL;AAIXC,MAAAA,qBAAqB,EAAE;AAJZ,KAAb;AAOA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDD,EAAAA,YAAY,CAACG,KAAD,EAAQ;AAClB,SAAKC,QAAL,CAAc;AACZ,OAACD,KAAK,CAACE,MAAN,CAAaC,IAAd,GAAqBH,KAAK,CAACE,MAAN,CAAaE;AADtB,KAAd;AAGD;;AAEDL,EAAAA,YAAY,GAAG;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEAX,IAAAA,qBAAqB,CAACiB,+BAAtB,CAAsD,KAAKb,KAAL,CAAWC,QAAjE,EAA2E,KAAKD,KAAL,CAAWE,QAAtF,EAAgGY,IAAhG,CACGC,QAAD,IAAc;AACZnB,MAAAA,qBAAqB,CAACoB,6BAAtB,CAAoD,KAAKhB,KAAL,CAAWC,QAA/D,EAAyEc,QAAQ,CAACE,IAAT,CAAcC,KAAvF;AACA,WAAKnB,KAAL,CAAWoB,OAAX,CAAmBC,IAAnB,CAAyB,YAAW,KAAKpB,KAAL,CAAWC,QAAS,EAAxD;AACD,KAJH,EAKEoB,KALF,CAME,MAAK;AACH,WAAKZ,QAAL,CAAc;AAAEL,QAAAA,qBAAqB,EAAE;AAAzB,OAAd;AACA,WAAKK,QAAL,CAAc;AAAEN,QAAAA,cAAc,EAAE;AAAlB,OAAd;AACD,KATH;AAYD;;AAECmB,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAGG,KAAKtB,KAAL,CAAWI,qBAAX,iBAAoC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHvC,EAIG,KAAKJ,KAAL,CAAWG,cAAX,iBACC;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eAOY,GAPZ,eAQE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,KAAK,EAAE,KAAKH,KAAL,CAAWC,QAHpB;AAIE,QAAA,QAAQ,EAAE,KAAKI;AAJjB;AAAA;AAAA;AAAA;AAAA,cARF,eAcY,GAdZ,eAeE;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,KAAK,EAAE,KAAKL,KAAL,CAAWE,QAHpB;AAIE,QAAA,QAAQ,EAAE,KAAKG;AAJjB;AAAA;AAAA;AAAA;AAAA,cAfF,eAqBE;AAAQ,QAAA,SAAS,EAAC,iBAAlB;AAAoC,QAAA,OAAO,EAAE,KAAKE,YAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cArBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA2BD;;AAxFkC;;AA2FrC,eAAeV,cAAf","sourcesContent":["import React, { Component } from \"react\";\nimport AuthenticationService from \"./AuthenticationService.js\";\n\n\nclass LoginComponent extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        username: \"jobTracker\",\n        password: \"\",\n        hasLoginFailed: false,\n        showSuccessfulMessage: false,\n      };\n  \n      this.handleChange = this.handleChange.bind(this);\n      this.loginClicked = this.loginClicked.bind(this);\n    }\n  \n    handleChange(event) {\n      this.setState({\n        [event.target.name]: event.target.value,\n      });\n    }\n  \n    loginClicked() {\n      // if (\n      //   this.state.username === 'asmithjr' &&\n      //   this.state.password === 'dummy'\n      // ) {\n      //   AuthenticationService.registerSuccessfulLogin(this.state.username, this.state.password);\n      //   this.props.history.push(`/welcome/${this.state.username}`);\n      // } else {\n      //   this.setState({ showSuccessfulMessage: false });\n      //   this.setState({ hasLoginFailed: true });\n      // }\n\n    //   AuthenticationService.executeBasicAuthenticationService(this.state.username, this.state.password).then(\n    //     () => {\n    //       AuthenticationService.registerSuccessfulLogin(this.state.username, this.state.password);\n    //       this.props.history.push(`/welcome/${this.state.username}`);\n    //     }\n    //   ).catch( \n    //     () =>{\n    //       this.setState({ showSuccessfulMessage: false });\n    //       this.setState({ hasLoginFailed: true });\n    //     }\n\n    //   )\n    // }\n\n    AuthenticationService.executeJwtAuthenticationService(this.state.username, this.state.password).then(\n      (response) => {\n        AuthenticationService.registerSuccessfulLoginForJwt(this.state.username, response.data.token );\n        this.props.history.push(`/welcome/${this.state.username}`);\n      }\n    ).catch( \n      () =>{\n        this.setState({ showSuccessfulMessage: false });\n        this.setState({ hasLoginFailed: true });\n      }\n\n    )\n  }\n  \n    render() {\n      return (\n        <div>\n          <h1>Login</h1>\n          <div className=\"container\"> </div>\n          {this.state.showSuccessfulMessage && <div>Login Successful</div>}\n          {this.state.hasLoginFailed && \n            <div className=\"alert alert-warning\">Invalid Credentials</div>\n          }\n          UserName:{\" \"}\n          <input\n            type=\"text\"\n            name=\"username\"\n            value={this.state.username}\n            onChange={this.handleChange}\n          />\n          Password:{\" \"}\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={this.state.password}\n            onChange={this.handleChange}\n          />\n          <button className=\"btn btn-success\" onClick={this.loginClicked}>\n            Login\n          </button>\n        </div>\n      );\n    }\n  }\n  \n  export default LoginComponent"]},"metadata":{},"sourceType":"module"}