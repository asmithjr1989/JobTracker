{"ast":null,"code":"class AuthenticationService {\n  registerSuccessfulLogin(username, password) {\n    console.log('registerSuccessfulLogin');\n    sessionStorage.setItem('authenticatedUser', username);\n    this.setupAxiosInterceptors();\n  }\n\n  logout() {\n    sessionStorage.removeItem('authenticatedUser');\n  }\n\n  isUserLoggedIn() {\n    let user = sessionStorage.getItem('authenticatedUser');\n    if (user === null) return false;\n    return true;\n  }\n\n  getLoggedInUserName() {\n    let user = sessionStorage.getItem('authenticatedUser');\n    if (user === null) return '';\n    return user;\n  }\n\n  setupAxiosInterceptors() {\n    let username = 'asmithjr';\n    let password = 'dummy';\n    let basicAuthHeader = 'Basic ' + window.btoa(username + \":\" + password);\n    Axios.interceptors.request.use(config => {\n      if (this.isUserLoggedIn()) {\n        config.headers.authorization = basicAuthHeader;\n      }\n\n      return config;\n    });\n  }\n\n}\n\nexport default new AuthenticationService();","map":{"version":3,"sources":["/Users/tony/Desktop/JobTracker/front/job-tracker/src/components/job/AuthenticationService.js"],"names":["AuthenticationService","registerSuccessfulLogin","username","password","console","log","sessionStorage","setItem","setupAxiosInterceptors","logout","removeItem","isUserLoggedIn","user","getItem","getLoggedInUserName","basicAuthHeader","window","btoa","Axios","interceptors","request","use","config","headers","authorization"],"mappings":"AACA,MAAMA,qBAAN,CAA4B;AAExBC,EAAAA,uBAAuB,CAACC,QAAD,EAAUC,QAAV,EAAmB;AACtCC,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACAC,IAAAA,cAAc,CAACC,OAAf,CAAuB,mBAAvB,EAA4CL,QAA5C;AACA,SAAKM,sBAAL;AACH;;AAEDC,EAAAA,MAAM,GAAE;AACJH,IAAAA,cAAc,CAACI,UAAf,CAA0B,mBAA1B;AACH;;AAEDC,EAAAA,cAAc,GAAE;AACZ,QAAIC,IAAI,GAAGN,cAAc,CAACO,OAAf,CAAuB,mBAAvB,CAAX;AACA,QAAGD,IAAI,KAAG,IAAV,EAAgB,OAAO,KAAP;AAChB,WAAO,IAAP;AACH;;AAEDE,EAAAA,mBAAmB,GAAE;AACjB,QAAIF,IAAI,GAAGN,cAAc,CAACO,OAAf,CAAuB,mBAAvB,CAAX;AACA,QAAGD,IAAI,KAAG,IAAV,EAAgB,OAAO,EAAP;AAChB,WAAOA,IAAP;AACH;;AAEDJ,EAAAA,sBAAsB,GAAE;AACpB,QAAIN,QAAQ,GAAG,UAAf;AACA,QAAIC,QAAQ,GAAG,OAAf;AAEA,QAAIY,eAAe,GAAG,WAAYC,MAAM,CAACC,IAAP,CAAYf,QAAQ,GAAG,GAAX,GAAiBC,QAA7B,CAAlC;AAEAe,IAAAA,KAAK,CAACC,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CACKC,MAAD,IAAY;AACR,UAAG,KAAKX,cAAL,EAAH,EAAyB;AACrBW,QAAAA,MAAM,CAACC,OAAP,CAAeC,aAAf,GAA+BT,eAA/B;AACH;;AACD,aAAOO,MAAP;AACH,KANL;AASH;;AAvCuB;;AA2C5B,eAAe,IAAItB,qBAAJ,EAAf","sourcesContent":["\nclass AuthenticationService {\n\n    registerSuccessfulLogin(username,password){\n        console.log('registerSuccessfulLogin');\n        sessionStorage.setItem('authenticatedUser', username);\n        this.setupAxiosInterceptors()\n    }\n\n    logout(){\n        sessionStorage.removeItem('authenticatedUser');\n    }\n\n    isUserLoggedIn(){\n        let user = sessionStorage.getItem('authenticatedUser')\n        if(user===null) return false ;\n        return true\n    }\n\n    getLoggedInUserName(){\n        let user = sessionStorage.getItem('authenticatedUser')\n        if(user===null) return '' ;\n        return user\n    }\n\n    setupAxiosInterceptors(){\n        let username = 'asmithjr'\n        let password = 'dummy'\n\n        let basicAuthHeader = 'Basic ' +  window.btoa(username + \":\" + password)\n\n        Axios.interceptors.request.use(\n            (config) => {\n                if(this.isUserLoggedIn()){\n                    config.headers.authorization = basicAuthHeader\n                }\n                return config\n            }\n        )\n\n    }\n\n}\n\nexport default new AuthenticationService()"]},"metadata":{},"sourceType":"module"}