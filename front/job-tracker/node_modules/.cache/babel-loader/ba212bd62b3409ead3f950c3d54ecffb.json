{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/tony/Desktop/JobTracker/front/job-tracker/src/components/job/JobComponent.jsx\";\nimport React, { Component } from \"react\";\nimport moment from \"moment\";\nimport { ErrorMessage, Field, Form, Formik } from \"formik\";\nimport JobsDataService from \"../../api/job/JobsDataService.js\";\nimport AuthenticationService from \"./AuthenticationService.js\";\n\nclass JobComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: this.props.match.params.id,\n      jobTitle: \"\",\n      company: \"\",\n      webLink: \"\",\n      status: \"\",\n      appliedDate: moment(new Date()).format(\"YYYY-MM-DD\"),\n      notes: \"\"\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n    this.validate = this.validate.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.state.id === 1) {\n      return;\n    }\n\n    let username = AuthenticationService.getLoggedInUserName();\n    JobsDataService.retrieveJob(username, this.state.id).then(response => this.setState({\n      jobTitle: response.data.jobTitle,\n      company: response.data.company,\n      webLink: response.data.webLink,\n      status: response.data.status,\n      appliedDate: moment(response.data.appliedDate).format(\"YYYY-MM-DD\"),\n      notes: response.data.notes\n    }));\n  }\n\n  validate(values) {\n    let errors = {};\n\n    if (!values.jobTitle) {\n      errors.jobTitle = \"Enter a Job Title\";\n    } else if (values.jobTitle.length < 2) {\n      errors.jobTitle = \"Enter at least 2 Characters in the Job Title\";\n    }\n\n    if (!values.company) {\n      errors.company = \"Enter the name of the Company\";\n    } else if (values.company.length < 2) {\n      errors.company = \"Enter at least 2 characters for Company\";\n    }\n\n    if (!values.webLink) {\n      errors.webLink = \"Enter in the link to the Job Posting\";\n    } else if (values.webLink.length < 5) {\n      errors.webLink = \"Enter at least 5 characters in for the Link\";\n    }\n\n    if (!values.status) {\n      errors.status = \"Enter the status of the Job Listing\";\n    } else if (values.status.length < 2) {\n      errors.status = \"Enter at least 2 characters in the status\";\n    }\n\n    if (!moment(values.appliedDate).isValid()) {\n      errors.appliedDate = \"Please enter a valid Date\";\n    }\n\n    return errors;\n  }\n\n  onSubmit(values) {\n    let username = AuthenticationService.getLoggedInUserName();\n    let job = {\n      id: this.state.id,\n      jobTitle: values.jobTitle,\n      company: values.company,\n      webLink: values.webLink,\n      status: values.status,\n      appliedDate: values.appliedDate,\n      notes: values.notes\n    };\n\n    if (this.state.id === -1) {\n      JobsDataService.createJob(username, job).then(() => this.props.history.push(\"/jobs\"));\n    } else {\n      JobsDataService.updateJob(username, this.state.id, job).then(() => this.props.history.push(\"/jobs\"));\n      console.log(values);\n    }\n  }\n\n  render() {\n    let {\n      jobTitle,\n      company,\n      webLink,\n      status,\n      appliedDate,\n      notes\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Jobs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            jobTitle,\n            company,\n            webLink,\n            status,\n            appliedDate,\n            notes\n          },\n          onSubmit: this.onSubmit,\n          validateOnChange: false,\n          validateOnBlur: false,\n          validate: this.validate,\n          enableReinitialize: true,\n          children: props => /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"jobTitle\",\n              component: \"div\",\n              className: \"alert alert-warning\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"appliedDate\",\n              component: \"div\",\n              className: \"alert alert-warning\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"company\",\n              component: \"div\",\n              className: \"alert alert-warning\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"webLink\",\n              component: \"div\",\n              className: \"alert alert-warning\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"status\",\n              component: \"div\",\n              className: \"alert alert-warning\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Job Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                className: \"form-control\",\n                type: \"text\",\n                name: \"jobTitle\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Company\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                className: \"form-control\",\n                type: \"text\",\n                name: \"company\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Link\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                className: \"form-control\",\n                type: \"text\",\n                name: \"webLink\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                className: \"form-control\",\n                type: \"text\",\n                name: \"status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \" Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                className: \"form-control\",\n                type: \"date\",\n                name: \"appliedDate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Notes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                className: \"form-control\",\n                type: \"text\",\n                name: \"notes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-success\",\n              type: \"submit\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default JobComponent;","map":{"version":3,"sources":["/Users/tony/Desktop/JobTracker/front/job-tracker/src/components/job/JobComponent.jsx"],"names":["React","Component","moment","ErrorMessage","Field","Form","Formik","JobsDataService","AuthenticationService","JobComponent","constructor","props","state","id","match","params","jobTitle","company","webLink","status","appliedDate","Date","format","notes","onSubmit","bind","validate","componentDidMount","username","getLoggedInUserName","retrieveJob","then","response","setState","data","values","errors","length","isValid","job","createJob","history","push","updateJob","console","log","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport moment from \"moment\";\nimport { ErrorMessage, Field, Form, Formik } from \"formik\";\nimport JobsDataService from \"../../api/job/JobsDataService.js\";\nimport AuthenticationService from \"./AuthenticationService.js\";\n\nclass JobComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      id: this.props.match.params.id,\n      jobTitle: \"\",\n      company: \"\",\n      webLink: \"\",\n      status: \"\",\n      appliedDate: moment(new Date()).format(\"YYYY-MM-DD\"),\n      notes: \"\",\n    };\n\n    this.onSubmit = this.onSubmit.bind(this);\n    this.validate = this.validate.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.state.id === 1) {\n      return;\n    }\n\n    let username = AuthenticationService.getLoggedInUserName();\n    JobsDataService.retrieveJob(username, this.state.id).then((response) =>\n      this.setState({\n        jobTitle: response.data.jobTitle,\n        company: response.data.company,\n        webLink: response.data.webLink,\n        status: response.data.status,\n        appliedDate: moment(response.data.appliedDate).format(\"YYYY-MM-DD\"),\n        notes: response.data.notes,\n      })\n    );\n  }\n\n  validate(values) {\n    let errors = {};\n    if (!values.jobTitle) {\n      errors.jobTitle = \"Enter a Job Title\";\n    } else if (values.jobTitle.length < 2) {\n      errors.jobTitle = \"Enter at least 2 Characters in the Job Title\";\n    }\n\n    if (!values.company) {\n      errors.company = \"Enter the name of the Company\";\n    } else if (values.company.length < 2) {\n      errors.company = \"Enter at least 2 characters for Company\";\n    }\n\n    if (!values.webLink) {\n      errors.webLink = \"Enter in the link to the Job Posting\";\n    } else if (values.webLink.length < 5) {\n      errors.webLink = \"Enter at least 5 characters in for the Link\";\n    }\n\n    if (!values.status) {\n      errors.status = \"Enter the status of the Job Listing\";\n    } else if (values.status.length < 2) {\n      errors.status = \"Enter at least 2 characters in the status\";\n    }\n\n    if (!moment(values.appliedDate).isValid()) {\n      errors.appliedDate = \"Please enter a valid Date\";\n    }\n\n    return errors;\n  }\n\n  onSubmit(values) {\n    let username = AuthenticationService.getLoggedInUserName();\n\n    let job = {\n      id: this.state.id,\n      jobTitle: values.jobTitle,\n      company: values.company,\n      webLink: values.webLink,\n      status: values.status,\n      appliedDate: values.appliedDate,\n      notes: values.notes,\n    };\n\n    if (this.state.id === -1) {\n      JobsDataService.createJob(username, job).then(() =>\n        this.props.history.push(\"/jobs\")\n      );\n    } else {\n      JobsDataService.updateJob(username, this.state.id, job).then(() =>\n        this.props.history.push(\"/jobs\")\n      );\n      console.log(values);\n    }\n  }\n  render() {\n    let { jobTitle, company, webLink, status, appliedDate, notes } = this.state;\n\n    return (\n      <div>\n        <h1>Jobs</h1>\n        <div className=\"container\">\n          <Formik\n            initialValues={{\n              jobTitle,\n              company,\n              webLink,\n              status,\n              appliedDate,\n              notes,\n            }}\n            onSubmit={this.onSubmit}\n            validateOnChange={false}\n            validateOnBlur={false}\n            validate={this.validate}\n            enableReinitialize={true}\n          >\n            {(props) => (\n              <Form>\n                <ErrorMessage\n                  name=\"jobTitle\"\n                  component=\"div\"\n                  className=\"alert alert-warning\"\n                />\n                <ErrorMessage\n                  name=\"appliedDate\"\n                  component=\"div\"\n                  className=\"alert alert-warning\"\n                />\n                <ErrorMessage\n                  name=\"company\"\n                  component=\"div\"\n                  className=\"alert alert-warning\"\n                />\n                <ErrorMessage\n                  name=\"webLink\"\n                  component=\"div\"\n                  className=\"alert alert-warning\"\n                />\n                <ErrorMessage\n                  name=\"status\"\n                  component=\"div\"\n                  className=\"alert alert-warning\"\n                />\n\n                <fieldset className=\"form-group\">\n                  <label>Job Title</label>\n                  <Field className=\"form-control\" type=\"text\" name=\"jobTitle\" />\n                </fieldset>\n                <fieldset className=\"form-group\">\n                  <label>Company</label>\n                  <Field className=\"form-control\" type=\"text\" name=\"company\" />\n                </fieldset>\n                <fieldset className=\"form-group\">\n                  <label>Link</label>\n                  <Field className=\"form-control\" type=\"text\" name=\"webLink\" />\n                </fieldset>\n                <fieldset className=\"form-group\">\n                  <label>Status</label>\n                  <Field className=\"form-control\" type=\"text\" name=\"status\" />\n                </fieldset>\n                <fieldset className=\"form-group\">\n                  <label> Date</label>\n                  <Field\n                    className=\"form-control\"\n                    type=\"date\"\n                    name=\"appliedDate\"\n                  />\n                </fieldset>\n                <fieldset className=\"form-group\">\n                  <label>Notes</label>\n                  <Field className=\"form-control\" type=\"text\" name=\"notes\" />\n                </fieldset>\n                <button className=\"btn btn-success\" type=\"submit\">\n                  Submit\n                </button>\n              </Form>\n            )}\n          </Formik>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default JobComponent;\n"]},"metadata":{},"sourceType":"module"}