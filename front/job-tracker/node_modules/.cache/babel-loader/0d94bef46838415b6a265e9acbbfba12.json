{"ast":null,"code":"import Axios from \"Axios\";\n\nclass AuthenticationService {\n  registerSuccessfulLogin(username, password) {\n    console.log('registerSuccessfulLogin');\n    sessionStorage.setItem('authenticatedUser', username);\n  }\n\n  logout() {\n    sessionStorage.removeItem('authenticatedUser');\n  }\n\n  isUserLoggedIn() {\n    let user = sessionStorage.getItem('authenticatedUser');\n    if (user === null) return false;\n    return true;\n  }\n\n  getLoggedInUserName() {\n    let user = sessionStorage.getItem('authenticatedUser');\n    if (user === null) return '';\n    return user;\n  }\n\n  setupAxiosInterceptors() {\n    Axios.interceptors.request.use(config => {\n      config.headers.auth;\n    });\n  }\n\n}\n\nexport default new AuthenticationService();","map":{"version":3,"sources":["/Users/tony/Desktop/JobTracker/front/job-tracker/src/components/job/AuthenticationService.js"],"names":["Axios","AuthenticationService","registerSuccessfulLogin","username","password","console","log","sessionStorage","setItem","logout","removeItem","isUserLoggedIn","user","getItem","getLoggedInUserName","setupAxiosInterceptors","interceptors","request","use","config","headers","auth"],"mappings":"AAAA,OAAQA,KAAR,MAAoB,OAApB;;AAEA,MAAMC,qBAAN,CAA4B;AAExBC,EAAAA,uBAAuB,CAACC,QAAD,EAAUC,QAAV,EAAmB;AACtCC,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACAC,IAAAA,cAAc,CAACC,OAAf,CAAuB,mBAAvB,EAA4CL,QAA5C;AACH;;AAEDM,EAAAA,MAAM,GAAE;AACJF,IAAAA,cAAc,CAACG,UAAf,CAA0B,mBAA1B;AACH;;AAEDC,EAAAA,cAAc,GAAE;AACZ,QAAIC,IAAI,GAAGL,cAAc,CAACM,OAAf,CAAuB,mBAAvB,CAAX;AACA,QAAGD,IAAI,KAAG,IAAV,EAAgB,OAAO,KAAP;AAChB,WAAO,IAAP;AACH;;AAEDE,EAAAA,mBAAmB,GAAE;AACjB,QAAIF,IAAI,GAAGL,cAAc,CAACM,OAAf,CAAuB,mBAAvB,CAAX;AACA,QAAGD,IAAI,KAAG,IAAV,EAAgB,OAAO,EAAP;AAChB,WAAOA,IAAP;AACH;;AAEDG,EAAAA,sBAAsB,GAAE;AACpBf,IAAAA,KAAK,CAACgB,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CACKC,MAAD,IAAY;AACRA,MAAAA,MAAM,CAACC,OAAP,CAAeC,IAAf;AACH,KAHL;AAKH;;AA7BuB;;AAiC5B,eAAe,IAAIpB,qBAAJ,EAAf","sourcesContent":["import  Axios  from \"Axios\";\n\nclass AuthenticationService {\n\n    registerSuccessfulLogin(username,password){\n        console.log('registerSuccessfulLogin');\n        sessionStorage.setItem('authenticatedUser', username);\n    }\n\n    logout(){\n        sessionStorage.removeItem('authenticatedUser');\n    }\n\n    isUserLoggedIn(){\n        let user = sessionStorage.getItem('authenticatedUser')\n        if(user===null) return false ;\n        return true\n    }\n\n    getLoggedInUserName(){\n        let user = sessionStorage.getItem('authenticatedUser')\n        if(user===null) return '' ;\n        return user\n    }\n\n    setupAxiosInterceptors(){\n        Axios.interceptors.request.use(\n            (config) => {\n                config.headers.auth\n            }\n        )\n    }\n\n}\n\nexport default new AuthenticationService()"]},"metadata":{},"sourceType":"module"}