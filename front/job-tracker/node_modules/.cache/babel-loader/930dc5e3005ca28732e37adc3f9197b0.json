{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/tony/Desktop/JobTracker/front/job-tracker/src/components/job/JobComponent.jsx\";\nimport React, { Component } from \"react\";\nimport moment from \"moment\";\nimport { ErrorMessage, Field, Form, Formik } from \"formik\";\nimport JobsDataService from \"../../api/job/JobsDataService.js\";\nimport AuthenticationService from \"./AuthenticationService.js\";\n\nclass JobComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: this.props.match.params.id,\n      jobTitle: \"\",\n      company: \"\",\n      webLink: \"\",\n      status: \"\",\n      appliedDate: moment(new Date()).format(\"YYYY-MM-DD\"),\n      notes: \"\"\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n    this.validate = this.validate.bind(this);\n  }\n\n  componentDidMount() {\n    let username = AuthenticationService.getLoggedInUserName();\n    JobsDataService.retrieveJob(username, this.state.id).then(response => this.setState({\n      jobTitle: response.data.jobTitle,\n      company: response.data.company,\n      webLink: response.data.webLink,\n      status: response.data.webLink,\n      appliedDate: moment(response.data.appliedDate).format('YYYY-MM-DD'),\n      notes: response.data.notes\n    }));\n  }\n\n  validate(values) {\n    let errors = {};\n\n    if (!values.jobTitle) {\n      errors.jobTitle = 'Enter a Job Title';\n    } else if (values.jobTitle.length < 2) {\n      errors.jobTitle = 'Enter at least 2 Characters in the Job Title';\n    }\n\n    if (!values.company) {\n      errors.company = 'Enter the name of the Company';\n    } else if (values.company.length < 2) {\n      errors.company = 'Enter at least 2 characters for Company';\n    }\n\n    if (!values.webLink) {\n      errors.webLink = 'Enter in the link to the Job Posting';\n    } else if (values.webLink.length < 5) {\n      errors.webLink = 'Enter at least 5 characters in for the Link';\n    }\n\n    if (!values.status) {\n      errors.status = 'Enter the status of the Job Listing';\n    } else if (values.status.length < 2) {\n      errors.status = 'Enter at least 2 characters in the status';\n    }\n\n    if (!moment(values.appliedDate).isValid()) {\n      errors.appliedDate = 'Please enter a valid Date';\n    }\n\n    return errors;\n  }\n\n  onSubmit(values) {\n    let username = AuthenticationService.getLoggedInUserName();\n    JobsDataService.updateJob(username, this.state.id, {\n      id: this.state.id,\n      jobTitle: values.id,\n      company: values.company,\n      webLink: values.webLink,\n      status: values.status,\n      appliedDate: values.appliedDate,\n      notes: values.notes\n    }).then();\n    console.log(values);\n  }\n\n  render() {\n    let {\n      jobTitle,\n      company,\n      webLink,\n      status,\n      appliedDate,\n      notes\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Jobs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            jobTitle,\n            company,\n            webLink,\n            status,\n            appliedDate,\n            notes\n          },\n          onSubmit: this.onSubmit,\n          validateOnChange: false,\n          validateOnBlur: false,\n          validate: this.validate,\n          enableReinitialize: true,\n          children: props => /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"jobTitle\",\n              component: \"div\",\n              className: \"alert alert-warning\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"appliedDate\",\n              component: \"div\",\n              className: \"alert alert-warning\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"company\",\n              component: \"div\",\n              className: \"alert alert-warning\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"webLink\",\n              component: \"div\",\n              className: \"alert alert-warning\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"status\",\n              component: \"div\",\n              className: \"alert alert-warning\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Job Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                className: \"form-control\",\n                type: \"text\",\n                name: \"jobTitle\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Company\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                className: \"form-control\",\n                type: \"text\",\n                name: \"company\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Link\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                className: \"form-control\",\n                type: \"text\",\n                name: \"webLink\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                className: \"form-control\",\n                type: \"text\",\n                name: \"status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \" Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                className: \"form-control\",\n                type: \"date\",\n                name: \"appliedDate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Notes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                className: \"form-control\",\n                type: \"text\",\n                name: \"notes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-success\",\n              type: \"submit\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default JobComponent;","map":{"version":3,"sources":["/Users/tony/Desktop/JobTracker/front/job-tracker/src/components/job/JobComponent.jsx"],"names":["React","Component","moment","ErrorMessage","Field","Form","Formik","JobsDataService","AuthenticationService","JobComponent","constructor","props","state","id","match","params","jobTitle","company","webLink","status","appliedDate","Date","format","notes","onSubmit","bind","validate","componentDidMount","username","getLoggedInUserName","retrieveJob","then","response","setState","data","values","errors","length","isValid","updateJob","console","log","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,YAAT,EAAuBC,KAAvB,EAA8BC,IAA9B,EAAoCC,MAApC,QAAkD,QAAlD;AACA,OAAOC,eAAP,MAA4B,kCAA5B;AACA,OAAOC,qBAAP,MAAkC,4BAAlC;;AAEA,MAAMC,YAAN,SAA2BR,SAA3B,CAAqC;AACnCS,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,EAAE,EAAE,KAAKF,KAAL,CAAWG,KAAX,CAAiBC,MAAjB,CAAwBF,EADjB;AAEXG,MAAAA,QAAQ,EAAE,EAFC;AAGXC,MAAAA,OAAO,EAAE,EAHE;AAIXC,MAAAA,OAAO,EAAE,EAJE;AAKXC,MAAAA,MAAM,EAAE,EALG;AAMXC,MAAAA,WAAW,EAAElB,MAAM,CAAC,IAAImB,IAAJ,EAAD,CAAN,CAAmBC,MAAnB,CAA0B,YAA1B,CANF;AAOXC,MAAAA,KAAK,EAAE;AAPI,KAAb;AAUA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcD,IAAd,CAAmB,IAAnB,CAAhB;AACD;;AAEDE,EAAAA,iBAAiB,GAAE;AACnB,QAAIC,QAAQ,GAAIpB,qBAAqB,CAACqB,mBAAtB,EAAhB;AACAtB,IAAAA,eAAe,CAACuB,WAAhB,CAA4BF,QAA5B,EAAsC,KAAKhB,KAAL,CAAWC,EAAjD,EACGkB,IADH,CACQC,QAAQ,IAAI,KAAKC,QAAL,CAAc;AAC9BjB,MAAAA,QAAQ,EAAEgB,QAAQ,CAACE,IAAT,CAAclB,QADM;AAE9BC,MAAAA,OAAO,EAAEe,QAAQ,CAACE,IAAT,CAAcjB,OAFO;AAG9BC,MAAAA,OAAO,EAAEc,QAAQ,CAACE,IAAT,CAAchB,OAHO;AAI9BC,MAAAA,MAAM,EAAEa,QAAQ,CAACE,IAAT,CAAchB,OAJQ;AAK9BE,MAAAA,WAAW,EAAElB,MAAM,CAAC8B,QAAQ,CAACE,IAAT,CAAcd,WAAf,CAAN,CAAkCE,MAAlC,CAAyC,YAAzC,CALiB;AAM9BC,MAAAA,KAAK,EAAES,QAAQ,CAACE,IAAT,CAAcX;AANS,KAAd,CADpB;AASC;;AAGDG,EAAAA,QAAQ,CAACS,MAAD,EAAQ;AACZ,QAAIC,MAAM,GAAG,EAAb;;AACE,QAAG,CAACD,MAAM,CAACnB,QAAX,EAAoB;AAClBoB,MAAAA,MAAM,CAACpB,QAAP,GAAkB,mBAAlB;AACD,KAFD,MAEO,IAAImB,MAAM,CAACnB,QAAP,CAAgBqB,MAAhB,GAAuB,CAA3B,EAA8B;AACnCD,MAAAA,MAAM,CAACpB,QAAP,GAAkB,8CAAlB;AACD;;AAED,QAAG,CAACmB,MAAM,CAAClB,OAAX,EAAmB;AACjBmB,MAAAA,MAAM,CAACnB,OAAP,GAAiB,+BAAjB;AACD,KAFD,MAEO,IAAIkB,MAAM,CAAClB,OAAP,CAAeoB,MAAf,GAAsB,CAA1B,EAA6B;AAClCD,MAAAA,MAAM,CAACnB,OAAP,GAAiB,yCAAjB;AACD;;AAED,QAAG,CAACkB,MAAM,CAACjB,OAAX,EAAmB;AACjBkB,MAAAA,MAAM,CAAClB,OAAP,GAAiB,sCAAjB;AACD,KAFD,MAEM,IAAIiB,MAAM,CAACjB,OAAP,CAAemB,MAAf,GAAsB,CAA1B,EAA4B;AAChCD,MAAAA,MAAM,CAAClB,OAAP,GAAiB,6CAAjB;AACD;;AAED,QAAG,CAACiB,MAAM,CAAChB,MAAX,EAAkB;AAChBiB,MAAAA,MAAM,CAACjB,MAAP,GAAgB,qCAAhB;AACD,KAFD,MAEM,IAAIgB,MAAM,CAAChB,MAAP,CAAckB,MAAd,GAAqB,CAAzB,EAA2B;AAC/BD,MAAAA,MAAM,CAACjB,MAAP,GAAgB,2CAAhB;AACD;;AAED,QAAG,CAACjB,MAAM,CAACiC,MAAM,CAACf,WAAR,CAAN,CAA2BkB,OAA3B,EAAJ,EAAyC;AACvCF,MAAAA,MAAM,CAAChB,WAAP,GAAqB,2BAArB;AACD;;AAEH,WAAOgB,MAAP;AACH;;AAEDZ,EAAAA,QAAQ,CAACW,MAAD,EAAQ;AACd,QAAIP,QAAQ,GAAGpB,qBAAqB,CAACqB,mBAAtB,EAAf;AAEAtB,IAAAA,eAAe,CAACgC,SAAhB,CAA0BX,QAA1B,EAAoC,KAAKhB,KAAL,CAAWC,EAA/C,EAAmD;AACjDA,MAAAA,EAAE,EAAE,KAAKD,KAAL,CAAWC,EADkC;AAEjDG,MAAAA,QAAQ,EAAEmB,MAAM,CAACtB,EAFgC;AAGjDI,MAAAA,OAAO,EAAEkB,MAAM,CAAClB,OAHiC;AAIjDC,MAAAA,OAAO,EAAEiB,MAAM,CAACjB,OAJiC;AAKjDC,MAAAA,MAAM,EAAEgB,MAAM,CAAChB,MALkC;AAMjDC,MAAAA,WAAW,EAAEe,MAAM,CAACf,WAN6B;AAOjDG,MAAAA,KAAK,EAAEY,MAAM,CAACZ;AAPmC,KAAnD,EAQGQ,IARH;AAWES,IAAAA,OAAO,CAACC,GAAR,CAAYN,MAAZ;AACH;;AACDO,EAAAA,MAAM,GAAG;AAEP,QAAI;AAAC1B,MAAAA,QAAD;AAAUC,MAAAA,OAAV;AAAkBC,MAAAA,OAAlB;AAA0BC,MAAAA,MAA1B;AAAiCC,MAAAA,WAAjC;AAA8CG,MAAAA;AAA9C,QAAuD,KAAKX,KAAhE;AAGA,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BACE,QAAC,MAAD;AACE,UAAA,aAAa,EAAE;AAACI,YAAAA,QAAD;AAAUC,YAAAA,OAAV;AAAkBC,YAAAA,OAAlB;AAA0BC,YAAAA,MAA1B;AAAiCC,YAAAA,WAAjC;AAA6CG,YAAAA;AAA7C,WADjB;AAGE,UAAA,QAAQ,EAAE,KAAKC,QAHjB;AAIE,UAAA,gBAAgB,EAAE,KAJpB;AAKE,UAAA,cAAc,EAAE,KALlB;AAME,UAAA,QAAQ,EAAE,KAAKE,QANjB;AAOE,UAAA,kBAAkB,EAAE,IAPtB;AAAA,oBASIf,KAAD,iBACC,QAAC,IAAD;AAAA,oCACE,QAAC,YAAD;AAAc,cAAA,IAAI,EAAC,UAAnB;AAA8B,cAAA,SAAS,EAAC,KAAxC;AAA8C,cAAA,SAAS,EAAC;AAAxD;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,YAAD;AAAc,cAAA,IAAI,EAAC,aAAnB;AAAiC,cAAA,SAAS,EAAC,KAA3C;AAAiD,cAAA,SAAS,EAAC;AAA3D;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE,QAAC,YAAD;AAAc,cAAA,IAAI,EAAC,SAAnB;AAA6B,cAAA,SAAS,EAAC,KAAvC;AAA6C,cAAA,SAAS,EAAC;AAAvD;AAAA;AAAA;AAAA;AAAA,oBAHF,eAIE,QAAC,YAAD;AAAc,cAAA,IAAI,EAAC,SAAnB;AAA6B,cAAA,SAAS,EAAC,KAAvC;AAA6C,cAAA,SAAS,EAAC;AAAvD;AAAA;AAAA;AAAA;AAAA,oBAJF,eAKE,QAAC,YAAD;AAAc,cAAA,IAAI,EAAC,QAAnB;AAA4B,cAAA,SAAS,EAAC,KAAtC;AAA4C,cAAA,SAAS,EAAC;AAAtD;AAAA;AAAA;AAAA;AAAA,oBALF,eAOE;AAAU,cAAA,SAAS,EAAC,YAApB;AAAA,sCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,QAAC,KAAD;AAAO,gBAAA,SAAS,EAAC,cAAjB;AAAgC,gBAAA,IAAI,EAAC,MAArC;AAA4C,gBAAA,IAAI,EAAC;AAAjD;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPF,eAWE;AAAU,cAAA,SAAS,EAAC,YAApB;AAAA,sCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,QAAC,KAAD;AAAO,gBAAA,SAAS,EAAC,cAAjB;AAAgC,gBAAA,IAAI,EAAC,MAArC;AAA4C,gBAAA,IAAI,EAAC;AAAjD;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAXF,eAeE;AAAU,cAAA,SAAS,EAAC,YAApB;AAAA,sCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,QAAC,KAAD;AAAO,gBAAA,SAAS,EAAC,cAAjB;AAAgC,gBAAA,IAAI,EAAC,MAArC;AAA4C,gBAAA,IAAI,EAAC;AAAjD;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAfF,eAmBE;AAAU,cAAA,SAAS,EAAC,YAApB;AAAA,sCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,QAAC,KAAD;AAAO,gBAAA,SAAS,EAAC,cAAjB;AAAgC,gBAAA,IAAI,EAAC,MAArC;AAA4C,gBAAA,IAAI,EAAC;AAAjD;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAnBF,eAuBE;AAAU,cAAA,SAAS,EAAC,YAApB;AAAA,sCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,QAAC,KAAD;AACE,gBAAA,SAAS,EAAC,cADZ;AAEE,gBAAA,IAAI,EAAC,MAFP;AAGE,gBAAA,IAAI,EAAC;AAHP;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAvBF,eA+BE;AAAU,cAAA,SAAS,EAAC,YAApB;AAAA,sCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,QAAC,KAAD;AAAO,gBAAA,SAAS,EAAC,cAAjB;AAAgC,gBAAA,IAAI,EAAC,MAArC;AAA4C,gBAAA,IAAI,EAAC;AAAjD;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBA/BF,eAmCE;AAAQ,cAAA,SAAS,EAAC,iBAAlB;AAAoC,cAAA,IAAI,EAAC,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAnCF;AAAA;AAAA;AAAA;AAAA;AAAA;AAVJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA0DD;;AAhJkC;;AAmJrC,eAAeF,YAAf","sourcesContent":["import React, { Component } from \"react\";\nimport moment from \"moment\";\nimport { ErrorMessage, Field, Form, Formik } from \"formik\";\nimport JobsDataService from \"../../api/job/JobsDataService.js\";\nimport AuthenticationService from \"./AuthenticationService.js\";\n\nclass JobComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      id: this.props.match.params.id,\n      jobTitle: \"\",\n      company: \"\",\n      webLink: \"\",\n      status: \"\",\n      appliedDate: moment(new Date()).format(\"YYYY-MM-DD\"),\n      notes: \"\",\n    }\n\n    this.onSubmit = this.onSubmit.bind(this)\n    this.validate = this.validate.bind(this)\n  }\n\n  componentDidMount(){\n  let username =  AuthenticationService.getLoggedInUserName()\n  JobsDataService.retrieveJob(username, this.state.id)\n    .then(response => this.setState({\n      jobTitle: response.data.jobTitle,\n      company: response.data.company,\n      webLink: response.data.webLink,\n      status: response.data.webLink,\n      appliedDate: moment(response.data.appliedDate).format('YYYY-MM-DD'),\n      notes: response.data.notes\n    }))\n  }\n\n\n  validate(values){\n      let errors = {}\n        if(!values.jobTitle){\n          errors.jobTitle = 'Enter a Job Title'\n        } else if (values.jobTitle.length<2) {\n          errors.jobTitle = 'Enter at least 2 Characters in the Job Title'\n        }\n\n        if(!values.company){\n          errors.company = 'Enter the name of the Company'\n        } else if (values.company.length<2) {\n          errors.company = 'Enter at least 2 characters for Company'\n        }\n\n        if(!values.webLink){\n          errors.webLink = 'Enter in the link to the Job Posting'\n        }else if (values.webLink.length<5){\n          errors.webLink = 'Enter at least 5 characters in for the Link'\n        }\n\n        if(!values.status){\n          errors.status = 'Enter the status of the Job Listing'\n        }else if (values.status.length<2){\n          errors.status = 'Enter at least 2 characters in the status'\n        }\n\n        if(!moment(values.appliedDate).isValid()){\n          errors.appliedDate = 'Please enter a valid Date'\n        }\n\n      return errors\n  }\n\n  onSubmit(values){\n    let username = AuthenticationService.getLoggedInUserName()\n\n    JobsDataService.updateJob(username, this.state.id, {\n      id: this.state.id, \n      jobTitle: values.id,\n      company: values.company,\n      webLink: values.webLink,\n      status: values.status,\n      appliedDate: values.appliedDate,\n      notes: values.notes\n    }).then(\n      \n    ) \n      console.log(values)\n  }\n  render() {\n\n    let {jobTitle,company,webLink,status,appliedDate, notes} = this.state\n\n\n    return (\n      <div>\n        <h1>Jobs</h1>\n        <div className=\"container\">\n          <Formik\n            initialValues={{jobTitle,company,webLink,status,appliedDate,notes\n            }}\n            onSubmit={this.onSubmit}\n            validateOnChange={false}\n            validateOnBlur={false}\n            validate={this.validate}\n            enableReinitialize={true}\n          >\n            {(props) => (\n              <Form>\n                <ErrorMessage name=\"jobTitle\" component=\"div\" className=\"alert alert-warning\"/>\n                <ErrorMessage name=\"appliedDate\" component=\"div\" className=\"alert alert-warning\"/>\n                <ErrorMessage name=\"company\" component=\"div\" className=\"alert alert-warning\" />\n                <ErrorMessage name=\"webLink\" component=\"div\" className=\"alert alert-warning\" />\n                <ErrorMessage name=\"status\" component=\"div\" className=\"alert alert-warning\" />\n                \n                <fieldset className=\"form-group\">\n                  <label>Job Title</label>\n                  <Field className=\"form-control\" type=\"text\" name=\"jobTitle\" />\n                </fieldset>\n                <fieldset className=\"form-group\">\n                  <label>Company</label>\n                  <Field className=\"form-control\" type=\"text\" name=\"company\" />\n                </fieldset>\n                <fieldset className=\"form-group\">\n                  <label>Link</label>\n                  <Field className=\"form-control\" type=\"text\" name=\"webLink\" />\n                </fieldset>\n                <fieldset className=\"form-group\">\n                  <label>Status</label>\n                  <Field className=\"form-control\" type=\"text\" name=\"status\" />\n                </fieldset>\n                <fieldset className=\"form-group\">\n                  <label> Date</label>\n                  <Field\n                    className=\"form-control\"\n                    type=\"date\"\n                    name=\"appliedDate\"\n                  />\n                </fieldset>\n                <fieldset className=\"form-group\">\n                  <label>Notes</label>\n                  <Field className=\"form-control\" type=\"text\" name=\"notes\" />\n                </fieldset>\n                <button className=\"btn btn-success\" type=\"submit\">\n                  Submit\n                </button>\n              </Form>\n            )}\n          </Formik>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default JobComponent;\n"]},"metadata":{},"sourceType":"module"}